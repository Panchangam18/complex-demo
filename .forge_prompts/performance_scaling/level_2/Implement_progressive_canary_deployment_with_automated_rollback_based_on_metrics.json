{
  "goal": "Implement progressive canary deployment with automated rollback based on metrics",
  "steps": [
    {
      "name": "Set up Flagger operator",
      "type": "cli",
      "command": "helm install flagger flagger/flagger --namespace=istio-system --set meshProvider=istio --set metricsServer=http://prometheus:9090",
      "parameters": {},
      "files": []
    },
    {
      "name": "Create canary resource",
      "type": "prompt",
      "prompt": "Define Flagger Canary resource with progressive traffic shifting (10% -> 50% -> 100%), success criteria based on request success rate and latency, and automated rollback triggers.",
      "parameters": {},
      "files": [
        "k8s/canary/frontend-canary.yaml"
      ]
    },
    {
      "name": "Configure custom metrics",
      "type": "integration",
      "integration": "prometheus",
      "method": "create_rule",
      "parameters": {
        "groups": [
          {
            "name": "canary_metrics",
            "rules": [
              {
                "record": "service:request_success_rate",
                "expr": "sum(rate(istio_request_duration_milliseconds_bucket{response_code!~\"5..\"}[1m])) by (destination_service_name) / sum(rate(istio_request_duration_milliseconds_bucket[1m])) by (destination_service_name)"
              }
            ]
          }
        ]
      },
      "files": []
    },
    {
      "name": "Deploy canary configuration",
      "type": "cli",
      "command": "kubectl apply -f k8s/canary/frontend-canary.yaml",
      "parameters": {},
      "files": []
    },
    {
      "name": "Create load testing job",
      "type": "integration",
      "integration": "kubernetes",
      "method": "BatchV1Api.create_namespaced_job",
      "parameters": {
        "namespace": "default",
        "body": {
          "metadata": {
            "name": "load-test-canary"
          },
          "spec": {
            "template": {
              "spec": {
                "containers": [
                  {
                    "name": "load-test",
                    "image": "loadimpact/k6",
                    "args": [
                      "run",
                      "--vus",
                      "50",
                      "--duration",
                      "10m",
                      "/scripts/canary-test.js"
                    ]
                  }
                ],
                "restartPolicy": "Never"
              }
            }
          }
        }
      },
      "files": []
    },
    {
      "name": "Trigger canary deployment",
      "type": "cli",
      "command": "kubectl set image deployment/frontend frontend=frontend:v2.0 -n production",
      "parameters": {},
      "files": []
    },
    {
      "name": "Monitor canary progress",
      "type": "cli",
      "command": "kubectl describe canary frontend -n production",
      "parameters": {},
      "files": []
    },
    {
      "name": "Check traffic distribution",
      "type": "integration",
      "integration": "prometheus",
      "method": "query",
      "parameters": {
        "query": "sum(rate(istio_request_total[1m])) by (destination_version)"
      },
      "files": []
    },
    {
      "name": "Verify success metrics",
      "type": "integration",
      "integration": "datadog",
      "method": "MetricsApi.query_scalar_data",
      "parameters": {
        "body": {
          "queries": [
            {
              "data_source": "metrics",
              "query": "avg:trace.http.request.errors{service:frontend,version:v2.0}",
              "name": "error_rate"
            }
          ]
        }
      },
      "files": []
    },
    {
      "name": "Test rollback trigger",
      "type": "cli",
      "command": "kubectl exec -it $(kubectl get pod -l app=chaos-injector -o jsonpath='{.items[0].metadata.name}') -- inject-errors --service frontend --error-rate 0.3",
      "parameters": {},
      "files": []
    },
    {
      "name": "Monitor rollback execution",
      "type": "integration",
      "integration": "kubernetes",
      "method": "CoreV1Api.list_namespaced_event",
      "parameters": {
        "namespace": "production",
        "field_selector": "involvedObject.name=frontend"
      },
      "files": []
    },
    {
      "name": "Verify service health post-deployment",
      "type": "cli",
      "command": "kubectl run curl-test --image=curlimages/curl --rm -it --restart=Never -- curl -s http://frontend.production:8080/health",
      "parameters": {},
      "files": []
    },
    {
      "name": "Generate deployment report",
      "type": "prompt",
      "prompt": "Analyze canary deployment metrics, document the traffic shifting pattern, success/failure criteria evaluation, and any rollbacks that occurred.",
      "parameters": {},
      "files": [
        "reports/canary-deployment-analysis.md"
      ]
    },
    {
      "name": "Update deployment runbook",
      "type": "prompt",
      "prompt": "Document the canary deployment process, metrics thresholds, rollback procedures, and troubleshooting steps for future deployments.",
      "parameters": {},
      "files": [
        "runbooks/canary-deployment.md"
      ]
    }
  ]
}