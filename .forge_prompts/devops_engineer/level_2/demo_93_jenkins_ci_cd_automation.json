{
  "task_description": "Set up comprehensive Jenkins CI/CD automation with Nexus integration for our multi-cloud platform. Configure Jenkins to use Nexus as a dependency cache for Maven, NPM, and PyPI packages, implement automated build pipelines for frontend and backend applications, and integrate with Prometheus for build metrics. Jenkins should trigger on GitHub commits, run tests, build Docker images, and report build status to Consul service discovery.",
  "goal": "Configure Jenkins with Nexus integration for automated CI/CD pipelines with monitoring",
  "difficulty": "advanced",
  "expected_actions": [
    "Review Jenkins-Nexus integration script at ci-cd/jenkins/scripts/jenkins-nexus-integration-complete.sh",
    "Configure Jenkins pipeline using ci-cd/jenkins/pipelines/jenkins-nexus-integration.groovy",
    "Set up Nexus repositories for Maven, NPM, and PyPI proxy caching",
    "Create Jenkins job for continuous integration with GitHub webhook",
    "Configure build metrics reporting to Prometheus",
    "Register Jenkins and Nexus services with Consul",
    "Test end-to-end build pipeline functionality",
    "Verify dependency caching through Nexus"
  ],
  "expected_outputs": [
    "Jenkins pipeline configured with Nexus dependency management",
    "Automated builds triggered by GitHub commits",
    "Docker images built and tagged with build numbers",
    "Build metrics exported to Prometheus",
    "Services registered in Consul with health checks",
    "Nexus repositories caching dependencies successfully"
  ],
  "evaluation_criteria": [
    "Jenkins successfully pulls dependencies through Nexus",
    "Build pipeline executes on code commits",
    "Docker images are built with proper tags",
    "Prometheus receives build duration metrics",
    "Consul shows healthy Jenkins and Nexus services",
    "Build artifacts are stored in Nexus"
  ],
  "tags": ["jenkins", "nexus", "ci-cd", "automation", "monitoring", "consul"],
  "hints": [
    "Check the jenkins-nexus-integration-complete.sh script for the full setup",
    "Ensure .env file has all required credentials from extract-credentials-to-env.sh",
    "Use the Jenkins pipeline Groovy script as a template",
    "Configure NPM and Maven to use Nexus proxy repositories",
    "Verify Consul service registration includes integration metadata"
  ],
  "files_to_modify": [
    "ci-cd/jenkins/pipelines/jenkins-nexus-integration.groovy",
    "k8s/base/jenkins/jenkins-config.yaml",
    "k8s/base/nexus/nexus-config.yaml"
  ],
  "related_files": [
    "ci-cd/jenkins/scripts/jenkins-nexus-integration-complete.sh",
    "scripts/extract-credentials-to-env.sh",
    ".env"
  ]
}