apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: frontend-dev
  labels:
    app: frontend
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        environment: dev
    spec:
      containers:
      - name: frontend
        image: forgea37.jfrog.io/complex-demo-docker-local/dev-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "development"
        - name: API_URL
          value: "http://backend-service.backend-dev.svc.cluster.local"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: frontend-dev
  labels:
    app: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: frontend
---
# Temporarily comment out the ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: frontend-ingress
#   namespace: frontend-dev
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#     alb.ingress.kubernetes.io/tags: Environment=dev
# spec:
#   ingressClassName: alb
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: frontend-service
#             port:
#               number: 80 