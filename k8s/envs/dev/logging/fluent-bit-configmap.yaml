---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: logging
  labels:
    app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         5
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
        storage.path  /var/log/flb-storage/
        storage.sync  normal
        storage.checksum off
        storage.backlog.mem_limit 50M

    [INPUT]
        Name              tail
        Path              /var/log/containers/*.log
        multiline.parser  docker, cri
        Tag               kube.*
        Refresh_Interval  5
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On
        Skip_Empty_Lines  On
        DB                /var/log/flb_kube.db
        storage.type      filesystem

    [INPUT]
        Name              systemd
        Tag               systemd.*
        Systemd_Filter    _SYSTEMD_UNIT=docker.service
        Systemd_Filter    _SYSTEMD_UNIT=kubelet.service
        Systemd_Filter    _SYSTEMD_UNIT=containerd.service
        Read_From_Tail    On
        Strip_Underscores On

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              On
        Buffer_Size         0
        Use_Kubelet         Off

    [FILTER]
        Name           modify
        Match          kube.*
        Add            cluster_name ${CLUSTER_NAME}
        Add            environment ${ENVIRONMENT}
        Add            cloud_provider ${CLOUD_PROVIDER}
        Add            region ${REGION}
        Add            log_source kubernetes
        Add            @timestamp ${time}

    [FILTER]
        Name           modify
        Match          systemd.*
        Add            cluster_name ${CLUSTER_NAME}
        Add            environment ${ENVIRONMENT}
        Add            cloud_provider ${CLOUD_PROVIDER}
        Add            region ${REGION}
        Add            log_source systemd
        Add            @timestamp ${time}

    # Parse application logs
    [FILTER]
        Name           parser
        Match          kube.*app*
        Key_Name       log
        Parser         json
        Reserve_Data   On
        Preserve_Key   On

    # Parse nginx logs
    [FILTER]
        Name           parser
        Match          kube.*nginx*
        Key_Name       log
        Parser         nginx
        Reserve_Data   On
        Preserve_Key   On

    # Parse Jenkins logs
    [FILTER]
        Name           grep
        Match          kube.*jenkins*
        Regex          log \[(INFO|WARN|ERROR|DEBUG)\]

    # Security log filtering
    [FILTER]
        Name           grep
        Match          kube.*
        Regex          log (ERROR|WARN|FATAL|security|authentication|authorization|failed|denied|blocked)

    [OUTPUT]
        Name            es
        Match           kube.*
        Host            798a3a233ea341aaad5b6c044a95fb25.us-central1.gcp.cloud.es.io
        Port            443
        TLS             On
        TLS.Verify      On
        HTTP_User       elastic
        HTTP_Passwd     ${ELASTICSEARCH_PASSWORD}
        Index           kubernetes-logs
        Type            _doc
        Logstash_Format On
        Logstash_Prefix kubernetes-logs
        Logstash_DateFormat %Y.%m.%d
        Include_Tag_Key On
        Tag_Key         tag
        Time_Key        @timestamp
        Time_Key_Format %Y-%m-%dT%H:%M:%S.%L%z
        Generate_ID     On
        Replace_Dots    On
        Trace_Error     On
        Retry_Limit     3
        storage.total_limit_size 100M

    [OUTPUT]
        Name            es
        Match           systemd.*
        Host            798a3a233ea341aaad5b6c044a95fb25.us-central1.gcp.cloud.es.io
        Port            443
        TLS             On
        TLS.Verify      On
        HTTP_User       elastic
        HTTP_Passwd     ${ELASTICSEARCH_PASSWORD}
        Index           systemd-logs
        Type            _doc
        Logstash_Format On
        Logstash_Prefix systemd-logs
        Logstash_DateFormat %Y.%m.%d
        Include_Tag_Key On
        Tag_Key         tag
        Time_Key        @timestamp
        Generate_ID     On
        Retry_Limit     3

  parsers.conf: |
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        cri
        Format      regex
        Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name        json
        Format      json
        Time_Key    timestamp
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        nginx
        Format      regex
        Regex       ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key    time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name        apache
        Format      regex
        Regex       ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key    time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name        syslog
        Format      regex
        Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key    time
        Time_Format %b %d %H:%M:%S

  stream_processor.conf: |
    [STREAM_TASK]
        Name   kubernetes-security
        Exec   CREATE STREAM security_events AS SELECT * FROM TAG:'kube.*' WHERE log LIKE '%ERROR%' OR log LIKE '%FATAL%' OR log LIKE '%security%' OR log LIKE '%authentication%' OR log LIKE '%authorization%';

    [STREAM_TASK]
        Name   application-errors
        Exec   CREATE STREAM app_errors AS SELECT kubernetes['pod_name'], kubernetes['namespace_name'], log, @timestamp FROM TAG:'kube.*' WHERE log LIKE '%ERROR%' OR log LIKE '%FATAL%'; 