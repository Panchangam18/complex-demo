---
# New Relic namespace
apiVersion: v1
kind: Namespace
metadata:
  name: newrelic
  labels:
    name: newrelic
  annotations:
    consul.hashicorp.com/connect-inject: "false"
---
# New Relic License Key Secret
apiVersion: v1
kind: Secret
metadata:
  name: newrelic-license-key
  namespace: newrelic
type: Opaque
stringData:
  license: "57a444d0f1282704eb650ec9561005bfFFFFNRAL"
---
# New Relic Infrastructure DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: newrelic-infrastructure
  namespace: newrelic
  labels:
    app: newrelic-infrastructure
spec:
  selector:
    matchLabels:
      app: newrelic-infrastructure
  template:
    metadata:
      labels:
        app: newrelic-infrastructure
      annotations:
        consul.hashicorp.com/connect-inject: "false"
    spec:
      serviceAccountName: newrelic-infrastructure
      hostNetwork: true
      hostPID: true
      hostIPC: true
      containers:
      - name: newrelic-infrastructure
        image: newrelic/infrastructure-k8s:3.28.1
        securityContext:
          privileged: true
        env:
        - name: NRIA_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license-key
              key: license
        - name: NRIA_VERBOSE
          value: "1"
        - name: NRIA_CACHE_PATH
          value: "/tmp"
        - name: NRIA_ENABLE_PROCESS_METRICS
          value: "true"
        - name: NRIA_PASSTHROUGH_ENVIRONMENT
          value: "KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,CLUSTER_NAME,CADVISOR_PORT,NRK8S_NODE_NAME,KUBE_STATE_METRICS_URL,KUBE_STATE_METRICS_POD_LABEL,TIMEOUT,ETCD_TLS_SECRET_NAME,ETCD_TLS_SECRET_NAMESPACE,API_SERVER_SECURE_PORT,KUBE_STATE_METRICS_SCHEME,KUBE_STATE_METRICS_PORT,SCHEDULER_ENDPOINT_URL,ETCD_ENDPOINT_URL,CONTROLLER_MANAGER_ENDPOINT_URL,API_SERVER_ENDPOINT_URL,DISABLE_KUBE_STATE_METRICS,DISCOVERY_CACHE_TTL"
        - name: CLUSTER_NAME
          value: "dev-eks-us-east-2"
        - name: NRK8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NRIA_CUSTOM_ATTRIBUTES
          value: "{'clusterName':'dev-eks-us-east-2','environment':'dev','cloud':'aws','region':'us-east-2'}"
        volumeMounts:
        - name: host-docker-socket
          mountPath: /var/run/docker.sock
        - name: host-dev
          mountPath: /dev
        - name: host-proc
          mountPath: /host/proc
          readOnly: true
        - name: host-sys
          mountPath: /host/sys
          readOnly: true
        - name: host-etc
          mountPath: /host/etc
          readOnly: true
        - name: host-var-cache-nr
          mountPath: /var/cache/nr-infrastructure
        - name: host-var-log
          mountPath: /host/var/log
          readOnly: true
        resources:
          requests:
            memory: "150Mi"
            cpu: "100m"
          limits:
            memory: "300Mi"
            cpu: "300m"
      volumes:
      - name: host-docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: host-dev
        hostPath:
          path: /dev
      - name: host-proc
        hostPath:
          path: /proc
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-etc
        hostPath:
          path: /etc
      - name: host-var-cache-nr
        hostPath:
          path: /var/cache/nr-infrastructure
          type: DirectoryOrCreate
      - name: host-var-log
        hostPath:
          path: /var/log
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "NoExecute"
---
# ServiceAccount for New Relic Infrastructure
apiVersion: v1
kind: ServiceAccount
metadata:
  name: newrelic-infrastructure
  namespace: newrelic
---
# ClusterRole for New Relic Infrastructure
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: newrelic-infrastructure
rules:
- apiGroups: [""]
  resources:
    - "nodes"
    - "nodes/metrics"
    - "nodes/stats"
    - "nodes/proxy"
    - "pods"
    - "pods/log"
    - "services"
    - "endpoints"
    - "persistentvolumes"
    - "persistentvolumeclaims"
    - "namespaces"
    - "componentstatuses"
    - "replicationcontrollers"
    - "limitranges"
    - "resourcequotas"
    - "events"
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
    - "deployments"
    - "replicasets"
    - "daemonsets"
    - "statefulsets"
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
    - "deployments"
    - "daemonsets"
    - "replicasets"
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
    - "jobs"
    - "cronjobs"
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources:
    - "horizontalpodautoscalers"
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources:
    - "poddisruptionbudgets"
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources:
    - "storageclasses"
    - "volumeattachments"
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources:
    - "ingresses"
    - "networkpolicies"
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
# ClusterRoleBinding for New Relic Infrastructure
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: newrelic-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-infrastructure
subjects:
- kind: ServiceAccount
  name: newrelic-infrastructure
  namespace: newrelic
---
# New Relic kube-state-metrics integration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: newrelic-kube-state-metrics
  namespace: newrelic
  labels:
    app: newrelic-kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: newrelic-kube-state-metrics
  template:
    metadata:
      labels:
        app: newrelic-kube-state-metrics
      annotations:
        consul.hashicorp.com/connect-inject: "false"
    spec:
      serviceAccountName: newrelic-infrastructure
      containers:
      - name: kube-state-metrics
        image: newrelic/nri-kube-events:2.10.3
        env:
        - name: NRI_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license-key
              key: license
        - name: NRI_CLUSTER_NAME
          value: "dev-eks-us-east-2"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
# New Relic Fluent Bit for Log Forwarding
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: newrelic-fluent-bit
  namespace: newrelic
  labels:
    app: newrelic-fluent-bit
spec:
  selector:
    matchLabels:
      app: newrelic-fluent-bit
  template:
    metadata:
      labels:
        app: newrelic-fluent-bit
      annotations:
        consul.hashicorp.com/connect-inject: "false"
    spec:
      serviceAccountName: newrelic-infrastructure
      containers:
      - name: fluent-bit
        image: newrelic/newrelic-fluent-bit-output:1.19.2
        env:
        - name: ENDPOINT
          value: "https://log-api.newrelic.com/log/v1"
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license-key
              key: license
        - name: BUFFER_SIZE
          value: "256k"
        - name: MAX_RECORDS
          value: "1024"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      volumes:
      - name: fluent-bit-config
        configMap:
          name: newrelic-fluent-bit-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "NoExecute"
---
# Fluent Bit Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: newrelic-fluent-bit-config
  namespace: newrelic
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    [INPUT]
        Name              tail
        Path              /var/log/containers/*.log
        Parser            docker
        Tag               kube.*
        Refresh_Interval  5
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off

    [FILTER]
        Name           modify
        Match          kube.*
        Add            cluster_name dev-eks-us-east-2
        Add            environment dev
        Add            cloud aws
        Add            region us-east-2

    [OUTPUT]
        Name           newrelic
        Match          kube.*
        licenseKey     ${LICENSE_KEY}
        endpoint       ${ENDPOINT}

  parsers.conf: |
    [PARSER]
        Name   docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On 