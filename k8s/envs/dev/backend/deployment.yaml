apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: backend-dev
  labels:
    app: backend
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        environment: dev
    spec:
      containers:
      - name: backend
        image: forgea37.jfrog.io/complex-demo-docker-local/dev-backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "development"
        - name: DATABASE_URL
          value: "postgresql://postgres:password@dev-postgres-us-east-2.ctqem8yca5a3.us-east-2.rds.amazonaws.com:5432/dev_db"
        - name: PORT
          value: "3001"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /status
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: backend-dev
  labels:
    app: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
  selector:
    app: backend
---
# Temporarily comment out the ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: backend-ingress
#   namespace: backend-dev
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#     alb.ingress.kubernetes.io/tags: Environment=dev
# spec:
#   ingressClassName: alb
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: backend-service
#             port:
#               number: 80 