# Test Service Discovery App - Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul-test-frontend
  namespace: frontend-dev
  annotations:
    consul.hashicorp.com/connect-inject: "false"  # Manual for now due to resource constraints
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul-test-frontend
  template:
    metadata:
      labels:
        app: consul-test-frontend
      annotations:
        consul.hashicorp.com/service-name: "frontend-service"
        consul.hashicorp.com/service-port: "80"
        consul.hashicorp.com/service-tags: "aws,eks,frontend,web"
    spec:
      containers:
      - name: frontend
        image: nginx:alpine
        ports:
        - containerPort: 80
        env:
        - name: CONSUL_HTTP_ADDR
          value: "10.0.56.235:8500"  # Primary Consul server IP
        - name: SERVICE_NAME
          value: "frontend-service"
        - name: DATACENTER
          value: "eks-dev-us-east-2"
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
        volumeMounts:
        - name: consul-test-config
          mountPath: /usr/share/nginx/html
        - name: consul-register-script
          mountPath: /docker-entrypoint.d/
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "=== Consul Service Discovery Test ==="
          echo "Registering service with Consul..."
          
          # Register this service with Consul
          curl -X PUT http://${CONSUL_HTTP_ADDR}/v1/agent/service/register \
            -d '{
              "ID": "'${HOSTNAME}'",
              "Name": "'${SERVICE_NAME}'",
              "Tags": ["aws", "eks", "frontend", "test"],
              "Port": 80,
              "Check": {
                "HTTP": "http://'${HOSTNAME}':80/health",
                "Interval": "10s"
              }
            }'
          
          echo "Service registered! Starting nginx..."
          nginx -g 'daemon off;'
      volumes:
      - name: consul-test-config
        configMap:
          name: consul-test-config
      - name: consul-register-script
        configMap:
          name: consul-register-script
          defaultMode: 0755
---
# Test Service Discovery App - Backend
apiVersion: apps/v1  
kind: Deployment
metadata:
  name: consul-test-backend
  namespace: backend-dev
  annotations:
    consul.hashicorp.com/connect-inject: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul-test-backend
  template:
    metadata:
      labels:
        app: consul-test-backend
      annotations:
        consul.hashicorp.com/service-name: "backend-service"
        consul.hashicorp.com/service-port: "3001"
        consul.hashicorp.com/service-tags: "aws,eks,backend,api"
    spec:
      containers:
      - name: backend
        image: hashicorp/consul-template:alpine
        env:
        - name: CONSUL_HTTP_ADDR
          value: "10.0.56.235:8500"
        - name: SERVICE_NAME
          value: "backend-service"
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "=== Backend Service Discovery Test ==="
          
          # Register backend service
          curl -X PUT http://${CONSUL_HTTP_ADDR}/v1/agent/service/register \
            -d '{
              "ID": "'${HOSTNAME}'",
              "Name": "'${SERVICE_NAME}'",
              "Tags": ["aws", "eks", "backend", "api"],
              "Port": 3001,
              "Check": {
                "HTTP": "http://'${HOSTNAME}':3001/health",
                "Interval": "10s"
              }
            }'
          
          # Create a simple service discovery demo
          cat > /tmp/discovery.sh << 'EOF'
          #!/bin/sh
          while true; do
            echo "=== Service Discovery Results ==="
            echo "Frontend services:"
            curl -s ${CONSUL_HTTP_ADDR}/v1/catalog/service/frontend-service | jq -r '.[] | "  - \(.Node): \(.ServiceAddress):\(.ServicePort) [\(.ServiceTags | join(","))]"'
            
            echo "Backend services:"  
            curl -s ${CONSUL_HTTP_ADDR}/v1/catalog/service/backend-service | jq -r '.[] | "  - \(.Node): \(.ServiceAddress):\(.ServicePort) [\(.ServiceTags | join(","))]"'
            
            echo "All registered services:"
            curl -s ${CONSUL_HTTP_ADDR}/v1/catalog/services | jq -r 'keys[]'
            
            sleep 30
          done
          EOF
          
          chmod +x /tmp/discovery.sh
          /tmp/discovery.sh
---
# ConfigMap for test content
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-test-config
  namespace: frontend-dev
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Consul Service Discovery Test</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .container { max-width: 800px; margin: 0 auto; }
            .status { padding: 10px; margin: 10px 0; border-radius: 5px; }
            .success { background-color: #d4edda; border: 1px solid #c3e6cb; color: #155724; }
            .info { background-color: #cce7ff; border: 1px solid #99d6ff; color: #004085; }
            pre { background-color: #f8f9fa; padding: 10px; border-radius: 5px; overflow-x: auto; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>🌐 Consul Multi-Cloud Service Discovery</h1>
            
            <div class="status success">
                ✅ <strong>Service Registered:</strong> This frontend service is registered with Consul
            </div>
            
            <div class="status info">
                📡 <strong>Datacenter:</strong> eks-dev-us-east-2 (AWS EKS)
            </div>
            
            <h2>Service Discovery Test</h2>
            <p>This application demonstrates cross-cloud service discovery using Consul:</p>
            
            <ul>
                <li>🏗️ <strong>Infrastructure:</strong> Services run across AWS, GCP, Azure</li>
                <li>🔍 <strong>Discovery:</strong> Services find each other by name, not IP</li>
                <li>🔒 <strong>Security:</strong> mTLS encryption between services</li>
                <li>🌍 <strong>Global:</strong> Single service catalog across all clouds</li>
            </ul>
            
            <h2>Architecture Overview</h2>
            <pre>
    ┌─────────────┐    ┌─────────────┐    ┌─────────────┐
    │   AWS EKS   │    │   GCP GKE   │    │  Azure AKS  │
    │             │    │             │    │             │
    │ ┌─────────┐ │    │ ┌─────────┐ │    │ ┌─────────┐ │
    │ │Frontend │ │    │ │Backend  │ │    │ │Database │ │
    │ │Service  │ │    │ │Service  │ │    │ │Service  │ │
    │ └─────────┘ │    │ └─────────┘ │    │ └─────────┘ │
    └─────────────┘    └─────────────┘    └─────────────┘
           │                   │                   │
           └───────────────────┼───────────────────┘
                               │
                        ┌─────────────┐
                        │   CONSUL    │
                        │ Service Mesh│
                        │   Registry  │
                        └─────────────┘
            </pre>
            
            <h2>Service Discovery Commands</h2>
            <p>Services can discover each other using DNS or HTTP API:</p>
            <pre>
    # DNS Discovery
    curl http://frontend-service.service.consul/
    curl http://backend-service.service.consul/api/data
    
    # HTTP API Discovery  
    curl http://consul:8500/v1/catalog/service/backend-service
    curl http://consul:8500/v1/health/service/frontend-service
            </pre>
            
            <div class="status info">
                🎯 <strong>Next Steps:</strong> Scale EKS cluster to enable full Consul mesh functionality
            </div>
        </div>
    </body>
    </html>
  health: |
    OK
---
# ConfigMap for registration script
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-register-script
  namespace: frontend-dev
data:
  register.sh: |
    #!/bin/sh
    echo "Registering with Consul..." 